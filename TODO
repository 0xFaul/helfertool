* atomic validation if shift is full
* Load Test (deactivate mail!)
* edit helper -> redirect to jobhelpers
* overview: vegetarian
* bot protection
* add helper to more shifts

* check for overlapping shifts

* Helper: is_coordinator, get_jobs_as_coordinator?

* get all helpers of event

* Badge Generierung (Rechte festlegen)
  * Background images optional, color instead

  * Badge: get all data and add it to badge
  * prefer coordinator

  * for some jobs an upload of an image is possible
  * Image for responsibles? (option)

  * delete_badge{permission, role, design}

  * generate_badges: error page with latex output

  * configure path to pdflatex in settings

* send mail to helpers (in job or all)
* add errors to all forms

Low priority
============

* badges page: change role for job directly
* set width of table columns
* Mail: link to registered page
* Search helper (name, mail)
* modelform: mark optional fields
* sort helpers and coordinators

After ESP
=========

* T-Shirts fixieren
* ask for preferred language on registration
* order of jobs
* delete helper as job admin: cannot select other shifts
* Javascript translation with Django
* Number of helpers in shift: negative number can be selected, validation only on save
* Datetimepickers for shift
  * begin < end
  * change end when begin is changed
* change password
* search username with name and mail
* add helper: infection_instruction only when necessary
* delete event: delete badge upload directory
* pdf export: vertical alignment
* remove old images in badgeupload directory
* latex_template: validation for .tex

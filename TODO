Important
==========

* resend confirmation mail
* allow empty mail addresses for internal registrations


Django things
=============

* all vs. distinct
* add errors to all forms
* use redirect function


Design, JS
==========

* set width of table columns
* Javascript translation with Django
* Datetimepickers for shift
  * begin < end
  * change end when begin is changed
* accept="image/*" for image uploads


Registration
============

* bot protection (seems not to be necessary until now)
* somehow make the notes for a job more visible
* edit mail template


Admin area
==========

* move admin/base.html and a lot of other things from registration to own app
* change order of jobs
* sort helpers and coordinators
* mails
    * attachments?
    * show sent mails also when event is archived
* event date -> default for shift times


Badges
======

* shift (name for each shift, time,...?)
* delete_badge{permission, role, design}
* add image upload to registration form for certain jobs
* timeout for subprocess call (-> celery timeout)
* Show missing images (image for coordinators or for all)
* Check security of pdflatex, set more options (write documentation for mpost problem)
* Versioning of badges (for registration/validation)


Gifts
=====

* add flags to excel export
* condition for getting t-shirt (number of shifts or hours)
* default gift sets


File uploads
============

* delete uploaded files if
    * file is overwritten (-> keep name?)
    * event is deleted (everything)
    * helper is deleted (photo)
    * badge stuff

Inventory
========

* used inventory for single job
* rework registration and take back of items
  * first select user, then add/remove multiple items
  * also without badge
* add interface to manage inventory settings of event
* modeltranslation for inventory and item names
* delete item -> keep history for other events OR show warning on delete
* make sure that barcodes are unique for all activated inventories of an event
* edit item: unique_together leads to exception on same barcode
* export PDF with barcodes

Deployment
==========

* configuration file for helfertool that is parsed in settings.py
* settings in admin area?
* helfertool script? Similar to sentry?

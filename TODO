Prio
====

* allow empty mail addresses for internal registrations
* rework badge creation
    * The AMQP result backend is scheduled for deprecation in version 4.0 and removal in version v5.0. Please use RPC backend or a persistent backend.
* change after registration
    * add more shifts
    * add deadline to mail
* django + celery logging
* ask for gift selection during registration
* fix cleanup for file uploads (see below)
* fix bug with deleted helpers/coordinators

Design, JS
==========

* set width of table columns
* date and time selection
  * change end when begin is changed
* accept="image/*" for image uploads
* Rework edit_event view
* Use AJAX for UserSelectWidget
* Use UserSelectWidget on permissions page
* Remove inline CSS from unavailable.html -> set better CSP
* Rework language changer in navbar
* Alerts for messages: outline, colors
* Field/widget for shifts -> use for internal views and public registration

Registration
============

* edit mail template / add custom message to mails?
* duplicate shifts
* dynamic fields
* index for job: order and pk

Admin area
==========

* move a lot of other things from registration to own app
* event date -> default for shift times

Badges
======

* shift (name for each shift, time,...?)
* add image upload to registration form for certain jobs
* timeout for subprocess call (-> celery timeout)
* Show missing images (image for coordinators or for all)
* Check security of pdflatex, set more options (write documentation for mpost problem)
* Versioning of badges (for registration/validation)
* AJAX reload: timeout and redirect to login

Gifts
=====

* add flags to excel export

File uploads
============

* delete uploaded files if
    * file is overwritten (-> keep name?)
    * event is deleted (everything)
    * helper is deleted (photo)
    * badge stuff

Inventory
========

* rework registration and take back of items
  * first select user, then add/remove multiple items
  * also without badge
* add interface to manage inventory settings of event
* modeltranslation for inventory and item names
* delete item -> keep history for other events OR show warning on delete
* make sure that barcodes are unique for all activated inventories of an event
* edit item: unique_together leads to exception on same barcode, handle the exception
* export PDF with barcodes
* used inventory for single job?
